### Create user by registering
# curl -X 'POST'
#  'http://localhost:8000/api/auth/register?is_admin=true'
#  -H 'accept: application/json'
#  -H 'Content-Type: application/x-www-form-urlencoded'
#  -d 'username=admin2&email=admin2%40163.com&password=123456'
# @name Register
POST http://localhost:8000/api/auth/register?is_admin=true
accept: application/json
Content-Type: application/x-www-form-urlencoded

username = admin3 &
email = admin2%40163.com &
password = 123456

###


### Authorization by token, part 1. Retrieve and save token.
# curl -X 'POST'
#  'http://localhost:8000/api/auth/login'
#  -H 'accept: application/json'
#  -H 'Content-Type: application/x-www-form-urlencoded'
#  -d 'grant_type=&username=admin&password=123456&scope=&client_id=&client_secret='
# @name  Login
POST http://localhost:8000/api/auth/login
accept: application/json
Content-Type: application/x-www-form-urlencoded

grant_type = &
username= admin &
password= 123456 &
scope= &
client_id= &
client_secret=
> {%
    client.global.set("access_token", response.body.access_token);
%}
###


### Get all tasks.
# @name Get all tasks
GET http://127.0.0.1:8000/api/task/all
Content-Type: application/json
Authorization: Bearer {{access_token}}
###

### Authorization by token, part 1. Logout and clear token.
# @name Logout
POST http://127.0.0.1:8000/api/auth/logout
Content-Type: application/json
Authorization: Bearer {{access_token}}


> {%
    client.global.clear("access_token");
    console.log(client.global.get("access_token"))
%}
###